<!-- rostest launch file for Python scheduler and requester tests

     This unit test uses rostest, because the scheduler request
     interface requires a ROS environment.  
-->

<launch>

  <!-- start scheduler Python node  -->
  <node pkg="rocon_scheduler_requests" type="dummy_sched.py"
        name="dummy_scheduler" />

  <!-- start requester Python node -->
  <node pkg="rocon_scheduler_requests" type="dummy_req.py"
        name="dummy_requester" />

  <!-- Check that /rocon_scheduler requests are sent regularly.
       Normally 0.25 Hz, the heartbeat rate is set at 1 Hz to speed up
       the test.  The actual rate is higher because due to request
       update messages. -->
  <test test-name="request_hz_test"
        pkg="rostest" type="hztest" name="empty_request_test" >
    <param name="hz" value="1.5" />
    <param name="hzerror" value="1.0" />
    <param name="test_duration" value="4.0" />    
    <param name="topic" value="rocon_scheduler" />
    <param name="wait_time" value="2.0" />
  </test>

  <!-- check that /rocon_scheduler topic is sent  -->
  <test test-name="feedback_hz_test"
        pkg="rostest" type="hztest" name="empty_feedback_test" >
    <param name="hz" value="1.5" />
    <param name="hzerror" value="1.0" />
    <param name="test_duration" value="4.0" />    
    <param name="topic" value="rocon_scheduler_0123456789abcdef0123456789abcdef" />  
    <param name="wait_time" value="2.0" />
  </test>

</launch>
